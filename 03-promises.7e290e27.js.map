{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,sBAG3C,SAASG,EAAcC,EAAUC,GACjB,IAAIC,SAAS,SAACC,EAASC,GACnC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAIJS,MAAK,SAAAC,GACJC,EAAApB,GAASqB,OAAOC,QAAQH,E,IAEzBI,OAAM,SAAAC,GACLJ,EAAApB,GAASqB,OAAOI,QAAQD,E,IAnBbrB,SAASC,cAAc,UAuB/BsB,iBAAiB,SAAS,SAACC,GAChCA,EAAMC,iBAMN,IALA,IAAMC,EAAaC,OAAOC,SAAS7B,EAAWiB,OACxCa,EAAOF,OAAOC,SAAS1B,EAAUc,OACjCc,EAASH,OAAOC,SAASzB,EAAYa,OACvCe,EAAQ,EAEFC,EAAI,EAAGA,GAAKF,EAAQE,IAAM,CAClC,IAAIC,EAAIP,EAAaK,EACrB3B,EAAc4B,EAAGC,GACjBF,GAASF,EACTK,QAAQC,IAAIF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector(\"input[name=delay]\");\nconst stepInput = document.querySelector(\"input[name=step]\");\nconst amountInput = document.querySelector(\"input[name=amount]\");\nconst submit = document.querySelector(\"button\");\n\nfunction createPromise(position, delay) {\n  let promise = new Promise ((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay); \n    })\n  \n  promise\n  .then(value => {\n    Notiflix.Notify.success(value);\n  })\n  .catch(error => {\n    Notiflix.Notify.failure(error);\n  });\n}\n\nsubmit.addEventListener(\"click\", (event) => {\n  event.preventDefault();\n  const firstDelay = Number.parseInt(delayInput.value);\n  const step = Number.parseInt(stepInput.value);\n  const amount = Number.parseInt(amountInput.value);\n  let stepp = 0;\n\n  for ( let i = 1; i <= amount; i++ ) {\n    let d = firstDelay + stepp; \n    createPromise(i, d);\n    stepp += step;\n    console.log(d);\n    }\n  } \n);\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","addEventListener","event","preventDefault","firstDelay","Number","parseInt","step","amount","stepp","i","d","console","log"],"version":3,"file":"03-promises.7e290e27.js.map"}